version: "3"

vars:
  IMAGE_NAME: go-idasen-desk
  BUILD_FOLDER: bin
  VERSION:
    sh: git describe --tags --always --dirty 2>/dev/null || echo "dev"
  COMMIT:
    sh: git rev-parse --short HEAD 2>/dev/null || echo "none"
  BUILD_TIME:
    sh: date -u +"%Y-%m-%dT%H:%M:%SZ"
  LDFLAGS: -ldflags "-X github.com/AlejandroHerr/go-idasen-desk/version.Version={{.VERSION}} -X github.com/AlejandroHerr/go-idasen-desk/version.Commit={{.COMMIT}} -X github.com/AlejandroHerr/go-idasen-desk/version.BuildTime={{.BUILD_TIME}}"

tasks:
  run/*:
    internal: true
    desc: Run application
    vars:
      APP: "{{.APP}}"
    cmds:
      - go run -v ./cmd/{{.APP}}/main.go
  run/*/watch:
    internal: true
    desc: Run application with watch
    vars:
      APP: "{{.APP}}"
    cmds:
      - wgo run -v ./cmd/{{.APP}}/main.go
  build/*:
    internal: true
    desc: Build application
    vars:
      APP: "{{.APP}}"
    cmds:
      - echo "Building {{.APP}} {{.VERSION}} ({{.COMMIT}})"
      - go build {{.LDFLAGS}} -o {{BUILD_FOLDER}}/{{.APP}} ./cmd/{{.APP}}
    sources:
      - cmd/{{.APP}}/**/*.go
      - version/*.go
    generates:
      - bin/{{.APP}}
  docker/*:
    internal: true
    desc: Build Docker image
    vars:
      APP: "{{.APP}}"
    cmds:
      - docker build
        --build-arg APP_NAME={{.APP}}
        --build-arg VERSION={{.VERSION}}
        --build-arg COMMIT={{.COMMIT}}
        --build-arg BUILD_TIME={{.BUILD_TIME}}
        -t {{.IMAGE_NAME}}-{{.APP}}:{{.VERSION}}
        -f Dockerfile .
  run/api:
    desc: Run Rest API application
    cmds:
      - task: run/*
        vars:
          APP: api
  run/api/watch:
    desc: Run Rest API application with watch
    cmds:
      - task: run/*/watch
        vars:
          APP: api
  build/api:
    desc: Build Rest API application
    cmds:
      - task: build/*
        vars:
          APP: api
  docker/api:
    desc: Build Rest API Docker image
    cmds:
      - task: docker/*
        vars:
          APP: api
  run/scanner:
    desc: Run scanner application
    cmds:
      - task: run/*
        vars:
          APP: scanner
  run/scanner/watch:
    desc: Run scanner application with watch
    cmds:
      - task: run/*/watch
        vars:
          APP: scanner
  build/scanner:
    desc: Build scanner application
    cmds:
      - task: build/*
        vars:
          APP: scanner
  docker/scanner:
    desc: Build scanner Docker image
    cmds:
      - task: docker/*
        vars:
          APP: scanner
  lint:
    desc: Run linters
    cmds:
      - golangci-lint run --timeout 5m
  lint/fix:
    desc: Run linters and fix issues
    cmds:
      - golangci-lint run --fix --timeout 5m
  clean:
    desc: Clean build artifacts
    cmds:
      - rm -rf BUILD_FOLDER/
