name: Build and Publish

on:
  workflow_call:
    inputs:
      app:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      app:
        description: The name of the application to build and publish
        required: true
        type: string
        default: scanner
        options:
          - scanner

jobs:
  build:
    name: Build and Publish Docker Image for ${{ inputs.app }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: "arm64,arm,amd64"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/go-idasen-desk-${{ inputs.app }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=sha
            type=raw,latest
      - name: Determine version
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=dev-$(echo $GITHUB_REF | sed 's/refs\/heads\///')-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          fi
          echo "BUILD_TIME=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
          echo "COMMIT=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: Dockerfile.${{ inputs.app }}
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ steps.version.outputs.VERSION }}
            COMMIT=${{ steps.version.outputs.COMMIT }}
            BUILD_TIME=${{ steps.version.outputs.BUILD_TIME }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
